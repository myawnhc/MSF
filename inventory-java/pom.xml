<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2018-2021 Hazelcast, Inc
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.package com.theyawns.controller.launcher;
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>MSF</artifactId>
        <groupId>com.hazelcast</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>inventory-java</artifactId>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <!-- Environment variables -->
        <docker.image.name>${project.artifactId}</docker.image.name>
        <docker.jar.file>${project.artifactId}-${project.version}-with-dependencies.jar</docker.jar.file>
        <my.main.class>com.hazelcast.msfdemo.ordersvc.service.OrderService</my.main.class>
        <docker.project.prefix>msf</docker.project.prefix>
        <dockerfile.skip>false</dockerfile.skip>
        <main.basedir>${project.basedir}</main.basedir>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH-mm-ss</maven.build.timestamp.format>

        <!-- Versions -->
        <hazelcast-jet.version>4.5</hazelcast-jet.version>
        <hazelcast-jet-spring-boot-starter.version>2.0.1</hazelcast-jet-spring-boot-starter.version>
        <json.version>20190722</json.version>
        <json-smart.version>2.3</json-smart.version>

        <!-- Plugins -->
        <java.version>11</java.version>
        <dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
        <frontend-maven-plugin.version>1.9.1</frontend-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>
        <maven-assembly-plugin.version>3.1.1</maven-assembly-plugin.version>
    </properties>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>
        <resources>
            <!-- Not sure why the default is being suppressed, adding it explicitly -->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
            <resource>
                <directory>../framework/target</directory>
                <targetPath>ext</targetPath>
                <includes>
                    <include>framework-*.jar</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:3.12.0:exe:${os.detected.classifier}</protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.37.1:exe:${os.detected.classifier}</pluginArtifact>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- build jar without dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>ext/</classpathPrefix>
                            <mainClass>
                                ${my.main.class}
                            </mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- build jar with dependencies -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <archive>
                        <manifest>
                            <mainClass>${my.main.class}</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
                        </manifestEntries>
                    </archive>
                    <attach>false</attach>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <finalName>${project.artifactId}-${project.version}-with-dependencies</finalName>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Not building docker for the order service yet
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <configuration>
                    <buildArgs>
                        <JAR_FILE>${docker.jar.file}</JAR_FILE>
                        <CLUSTER1_NAME>${your.cluster1.name}</CLUSTER1_NAME>
                        <CLUSTER1_PORTLIST>${your.cluster1.external.port.list}</CLUSTER1_PORTLIST>
                        <CLUSTER2_NAME>${your.cluster2.name}</CLUSTER2_NAME>
                        <CLUSTER2_PORTLIST>${your.cluster2.external.port.list}</CLUSTER2_PORTLIST>
                        <LICENSE>${your.license.key}</LICENSE>
                        <MC_ADMINPASSWORD>${my.other.password}</MC_ADMINPASSWORD>
                        <MC_ADMINUSER>${my.other.user}</MC_ADMINUSER>
                        <MY_OTHERDATABASE>${my.other.database}</MY_OTHERDATABASE>
                        <MY_OTHERPASSWORD>${my.other.password}</MY_OTHERPASSWORD>
                        <MY_OTHERUSER>${my.other.user}</MY_OTHERUSER>
                    </buildArgs>
                    <dockerfile>Dockerfile</dockerfile>
                    <pullNewerImage>false</pullNewerImage>
                    <repository>${docker.project.prefix}/${docker.image.name}</repository>
                    <tag>latest</tag>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.8.0-M1</version>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>framework</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.hazelcast.jet</groupId>
            <artifactId>hazelcast-jet</artifactId>
            <version>4.5</version>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>inventory.protobuf</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <!-- will eventually drop one of these mariadb/mysql -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>2.4.3</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.25</version>
        </dependency>
        <dependency>
            <groupId>com.hazelcast.jet</groupId>
            <artifactId>hazelcast-jet-cdc-debezium</artifactId>
            <version>4.5</version>
        </dependency>
        <dependency>
            <groupId>com.hazelcast.jet</groupId>
            <artifactId>hazelcast-jet-cdc-mysql</artifactId>
            <version>4.5</version>
        </dependency>
    </dependencies>

</project>