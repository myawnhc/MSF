syntax = "proto3";
package inventory;
option java_package = "org.hazelcast.msfdemo.invsvc.events";

service Inventory {
  rpc CheckAvailability (ATPRequest) returns (ATPResponse) {}
  rpc CheckAvailabilityAllLocations (ATPRequest) returns (stream ATPResponse) {}
  rpc Ship (ShipRequest) returns (ShipResponse) {}
  rpc Reserve (ReserveRequest) returns (ReserveResponse) {}
  rpc Pull (PullRequest) returns (PullResponse) {}
  rpc Unreserve (ReserveRequest) returns (ReserveResponse) {} // Compensate for Reserve
  rpc Restock (PullRequest) returns (PullResponse) {} // Compensate for Pull

  // These are more demo oriented than production, used to make sure we don't run
  // ahead of data generation and order items not yet added
  rpc GetItemCount (ItemCountRequest) returns (ItemCountResponse) {}
  rpc GetInventoryRecordCount (InventoryCountRequest) returns (InventoryCountResponse) {}
  // Additional APIs including add / move not required for initial demo use case

  rpc SubscribeToInventoryReserved (SubscribeRequest) returns (stream InventoryReserved)  {}
  rpc SubscribeToInventoryPulled (SubscribeRequest) returns (stream InventoryPulled) {}
}

message ATPRequest {
  string itemNumber = 1;
  string location = 2; // might be null
}

message ATPResponse {
  int32 available = 1;
}

message ShipRequest {
  string itemNumber = 1;
  string location = 2;
  int32 quantity = 3;
}

message ShipResponse {
  bool success = 1;
  string reason = 2;
}

message ReserveRequest {
  string itemNumber = 1;
  string location = 2;
  int32 quantity = 3;
  int32 duration_minutes = 4;
}

message ReserveResponse {
  bool success = 1;
  string reason = 2;
}

message PullRequest {
  string itemNumber = 1;
  string location = 2;
  int32 quantity = 3;
}

message PullResponse {
  bool success = 1;
  string reason = 2;
}

message ItemCountRequest {}
message ItemCountResponse {
  int32 count = 1;
}

message InventoryCountRequest {}
message InventoryCountResponse {
  int32 count = 1;
}

message SubscribeRequest {}

message InventoryReserved {
  string orderNumber = 1;
  string itemNumber = 2;
  string location = 3;
  int32 quantityReserved = 4;
}

message InventoryPulled {
  string orderNumber = 1;
  string itemNumber = 2;
  string location = 3;
  int32 quantityPulled = 4;
}